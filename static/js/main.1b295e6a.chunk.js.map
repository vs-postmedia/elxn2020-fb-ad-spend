{"version":3,"sources":["fonts/Shift-Bold.otf","fonts/BentonSansCond-Regular.otf","fonts/BentonSansCond-RegItalic.otf","fonts/BentonSansCond-Bold.otf","fonts/BentonSansCond-BoldItalic.otf","js/helper-functions.js","components/StatBox/StatBox.js","components/SummaryBox/SummaryBox.js","components/TooltipTemplate/tooltip-template.js","components/DrawChart/DrawChart.js","components/DailyCharts/DailyCharts.js","components/AdSpendTracker/AdSpendTracker.js","components/App/App.js","serviceWorker.js","index.js","fonts/Shift-BoldItalic.otf"],"names":["module","exports","months","helper","numberWithCommas","x","toString","replace","map","num","in_min","in_max","out_min","out_max","getPostmediaMonth","StatBox","props","className","data","party","toLowerCase","total","SummaryBox","stats","date","lastUpdate","split","month","parseInt","day","d","i","key","formatTime","d3","tooltip","height","width","y","path","__data__","popup","Popup","margin","top","right","bottom","left","a","parseData","chart","dims","node","getBoundingClientRect","window","innerWidth","setupAnnotations","svg","selectAll","enter","append","attr","style","text","xSetup","values","ySetup","call","xAxis","yAxis","bandwidth","on","handleMouseOver","handleMouseOut","hide","console","log","preventDefault","stopPropagation","point","clientX","clientY","html","tooltipTemplate","draw","order","forEach","filter","note","align","title","subject","y1","y2","g","xScale","domain","tickSize","tickFormat","tickPadding","tickValues","length","ticks","select","remove","nice","range","rangeRound","padding","DrawChart","DailyCharts","useEffect","classame","id","href","target","rel","AdSpendTracker","state","party_data","party_daily","Axios","get","this","dataUrl","then","resp","setState","last_update","party_total","party_order","Component","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b295e6a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Shift-Bold.cdd38a86.otf\";","module.exports = __webpack_public_path__ + \"static/media/BentonSansCond-Regular.43cd4ac7.otf\";","module.exports = __webpack_public_path__ + \"static/media/BentonSansCond-RegItalic.69a4217c.otf\";","module.exports = __webpack_public_path__ + \"static/media/BentonSansCond-Bold.6f6753fd.otf\";","module.exports = __webpack_public_path__ + \"static/media/BentonSansCond-BoldItalic.a6640d89.otf\";","const months = ['Jan.', 'Feb.', 'Mar.', 'Apr.', 'May', 'June', 'July', 'Aug.', 'Sept.', 'Oct.', 'Nov.', 'Dec.']\nconst helper = {\n\tnumberWithCommas(x) {\n\t    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\t},\n\tmap(num, in_min, in_max, out_min, out_max) {\n\t\treturn (num - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n\t},\n\tgetPostmediaMonth(x) {\n\t\treturn months[x];\n\t}\n\t\n};\n\nexport default helper;","import React from 'react';\nimport helper from '../../js/helper-functions';\nimport './StatBox.css';\n\n\nconst StatBox = (props) => {\n\n\treturn (\n\t\t<div className=\"stat\">\n\t\t\t<p className={`big-num ${props.data.party.toLowerCase()}`}>{`$${helper.numberWithCommas(props.data.total)}`}</p>\n\t\t\t<p className=\"label\">{props.data.party}</p>\n\t\t</div>\n\t);\n}\t\n\nexport default StatBox;","import React from 'react';\nimport StatBox from '../StatBox/StatBox';\nimport helper from '../../js/helper-functions';\nimport './SummaryBox.css';\n\nconst SummaryBox = (props) => {\n\tconst stats = props.data\n\n\tconst date = props.lastUpdate.split('-');\n\t// not zero-based. ugh.\n\tconst month = helper.getPostmediaMonth(parseInt(date[1]) - 1);\n\tconst day = date[2];\n\n\treturn (\n\t\t<div className=\"summary-box\">\n\t\t\t<div className=\"stat-box\">\n\t\t\t\t{\n\t\t\t\t\tstats.map((d,i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<StatBox data={d} key={i}></StatBox>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<p className=\"last-update\">{`From Sept. 21 to ${month} ${day}`}</p>\n\t\t</div>\n\t);\n}\n\n\nexport default SummaryBox;\n\n","import * as d3 from 'd3-time-format';\nimport helper from '../../js/helper-functions';\nimport './tooltip-template.css';\n\nconst formatTime = d3.timeFormat('%B %d');\n\nfunction tooltip(data) {\n\tconst total = data.path[0].__data__.total;\n\tconst date = data.path[0].__data__.date;\n\tconst template = `\n\t\t<div class=\"tooltip-content\">\n\t\t\t<p class=\"date\">${formatTime(date)}</p>\n\t\t\t<p class=\"total-amount\">$${helper.numberWithCommas(total)}</p>\n\t\t</div>\n\t`;\n\n\treturn template;\n};\n\nexport default tooltip;\n\n","import * as d3 from 'd3';\nimport Popup from '@flourish/popup';\n// import * as d3_annotation from 'd3-svg-annotation';\nimport helper from '../../js/helper-functions';\nimport tooltipTemplate from '../TooltipTemplate/tooltip-template';\nimport './DrawChart.css';\n\n\n// THE GOOD STUFF\nlet annotations, height, width, x, y;\nconst yTicks = 5;\nconst breakpoint = 600;\nconst popup = Popup();\nconst margin = {\n\ttop: 15,\n\tright: 25,\n\tbottom: 40,\n\tleft: 25\n};\n\nasync function DrawChart(props) {\n\t// convert dates into something useful\n\tconst data = await parseData(props);\n\n\t// get container element & determine dimensions\n\tconst chart = d3.select('#charts');\n\tconst dims = chart.node().getBoundingClientRect();\n\n\theight = (dims.height - margin.bottom - margin.top) / 3;\n\twidth = dims.width - margin.left;\n\t// stacked on mobile\n\tif (window.innerWidth > breakpoint) {\n\t\theight = dims.height;\n\t\twidth = (dims.width / 3) - margin.left - margin.right;\n\t}\n\t\n\tannotations = setupAnnotations(height, margin);\n\t// setup our svg\n\tconst svg = chart.selectAll('svg')\n\t\t.data(data)\n\t\t.enter().append('svg')\n\t\t\t.attr('class', d => d.party.toLowerCase())\n\t\t\t.style('height', `${height}px`)\n\t\t\t.style('width', `${width + margin.left}px`)\n\t\t\t.append('g')\n\t\t\t\t.attr('transform', `translate(${margin.left}, ${margin.top})`);\n\t\t\t\n\t// label charts\n\tsvg.append('text')\n\t\t.text(d => d.party)\n\t\t.attr('class', d => `${d.party.toLowerCase()} label-text`);\n\n\n    // Add axes\n\tx = xSetup(data[0].values);\n\ty = ySetup(data[0].values);\n    svg.append('g')\n    \t.call(xAxis);\n    svg.append('g')\n    \t.call(yAxis);\n\n    // draw the bars\n    svg.append('g')\n    \t.selectAll('rect')\n    \t.data(d => d.values)\n    \t.enter().append('rect')\n    \t\t.attr('x', d => x(d.date))\n    \t\t.attr('y', d => y(d.total))\n    \t\t.attr('height', d => y(0) - y(d.total))\n    \t\t.attr('width', x.bandwidth())\n    \t\t.on('mouseover touchstart', handleMouseOver)\n    \t\t.on('mouseout touchend', handleMouseOut);\n}\n\nconst handleMouseOut = () => {\n\tpopup.hide();\n}\nconst handleMouseOver = (d) => {\n\tconsole.log(d)\n\td.preventDefault();\n\td.stopPropagation();\n\n\tpopup.point(d.clientX, d.clientY);\n\tpopup.html(tooltipTemplate(d));\n\tpopup.draw();\n}\n\nconst parseData = (props) => {\n\tconst data = props.data;\n\tconst order = props.order;\n\n\tdata.forEach(party => {\n\t\tparty.values.forEach(d => {\n\t\t\td.date = d3.timeParse('%Y-%m-%d')(d.date);\n\t\t});\n\t});\n\n\t// sort so it matches the order in the big numbers section\n\treturn [\n\t\t...data.filter(d => d.party === order[0]),\n\t\t...data.filter(d => d.party === order[1]),\n\t\t...data.filter(d => d.party === order[2])\n\t];\n};\n\nconst setupAnnotations = (height, margin) => {\n\treturn [{\n\t\tclassName: 'annotation-text',\n\t\tdata: { x: '09/21/2020'},\n\t\tnote: { \n\t\t\talign: 'middle',\n\t\t\ttitle: 'Election called'\n\t\t},\n\t\tsubject: {\n\t\t\ty1: margin.top + 25,\n\t\t\ty2: height - margin.bottom\n\t\t},\n\t\ty: margin.top - 15\n\t}];\n}\n\nconst xAxis = g => {\n\tconst xScale = x.domain();\n\tg.attr('transform', `translate(0, ${height - margin.bottom})`)\n\t\t.attr('class', 'x-axis axis')\n\t\t.call(d3.axisBottom(x)\n\t\t\t.tickSize(0)\n\t\t\t.tickFormat(d3.timeFormat('%b. %d'))\n\t\t\t.tickPadding([10])\n\t\t\t.tickValues([xScale[0], xScale[xScale.length - 1]])\n\t\t)\n};\n\nconst yAxis = g => {\n\tg.attr('class', 'y-axis axis')\n\t\t.call(d3.axisLeft(y)\n\t\t\t.ticks(yTicks)\n\t\t\t.tickSize(-width)\n\t\t\t.tickFormat(d => `$${helper.numberWithCommas(d / 1000)}`)\n\t\t)\n\t\t.call(g => g.select('.domain').remove()); // removed the line\n};\n\nconst ySetup = (data) => {\n\treturn d3.scaleLinear()\n\t\t.domain([0, d3.max(data, d => parseInt(d.total))]).nice()\n\t\t.range([height - margin.bottom, margin.top])\n};\n\nconst xSetup = (data) => {\n\treturn d3.scaleBand()\n\t\t.rangeRound([0, width], 0.5).padding(0.1)\n\t\t.domain(data.map(d => d.date))\n};\n\nexport default DrawChart;","import React, { useEffect } from 'react';\nimport DrawChart from '../DrawChart/DrawChart';\nimport './DailyCharts.css';\n\nconst DailyCharts = (props) => {\n\t// this is called once the dom element has rendered\n\tuseEffect(()=> {\n\t\tDrawChart(props);\n\t});\n\n\treturn (\n\t\t<div className=\"daily-charts\">\n\t\t\t<h2>Daily Facebook ad spend <span classame=\"h2-small\">($000’s)</span></h2>\n\t\t\t<div id=\"charts\"></div>\n\n\t\t\t<p className=\"source\">Source: <a href=\"https://www.facebook.com/ads/library/\" target=\"_blank\" rel=\"noopener noreferrer\">Facebook Ad Library</a> • Data only includes spending by the official Facebook pages for each party, except the Liberals, which also includes ads run under the “Andrew Wilkinson for B.C.” Facebook page. The minimum daily total provided by Facebook is $100, so parties may have spent less on those days. Data includes ads placed on Facebook, Instagram, WhatsApp and Messenger.</p>\n\t\t</div>\n\t);\n}\n\n\n\n\nexport default DailyCharts;\n\n","import Axios from 'axios';\nimport React, { Component, Fragment } from 'react';\nimport SummaryBox from '../SummaryBox/SummaryBox';\nimport DailyCharts from '../DailyCharts/DailyCharts';\nimport './AdSpendTracker.css';\n\n\nexport default class AdSpendTracker extends Component {\n\tstate = {\n\t\tparty_data: [],\n\t\tparty_daily: []\n\t}\n\n\tcomponentDidMount() {\n\t\tAxios.get(this.props.dataUrl)\n\t\t\t.then(resp => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tlast_update: resp.data.lastUpdate,\n\t\t\t\t\tparty_data: resp.data.party_total,\n\t\t\t\t\tparty_daily: resp.data.party_daily,\n\t\t\t\t\tparty_order: resp.data.party_total.map(d => d.party)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\trender() {\n\t\tif (this.state.party_data.length > 0) {\n\t\t\treturn (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<SummaryBox className=\"summary-box\"\n\t\t\t\t\t\tdata={this.state.party_data}\n\t\t\t\t\t\tlastUpdate={this.state.last_update}>\n\t\t\t\t\t</SummaryBox>\n\n\t\t\t\t\t<DailyCharts\n\t\t\t\t\t\tdata={this.state.party_daily}\n\t\t\t\t\t\torder={this.state.party_order}>\n\t\t\t\t\t</DailyCharts>\n\t\t\t\t</Fragment>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Fragment />\n\t\t\t)\n\t\t}\n\t}\n}\n","import React from 'react';\nimport AdSpendTracker from '../AdSpendTracker/AdSpendTracker';\nimport './App.css';\n\nconst adSpendUrl = 'https://vs-postmedia-data.sfo2.digitaloceanspaces.com/elxn/ad-spend.json';\n\nfunction App() {\n\treturn (\n\t  \t<div className=\"App\">\n\t  \t\t<h1>The Liberals are outspending the NDP and the Greens by a wide margin...</h1>\n\t  \t\t<AdSpendTracker\t\n\t  \t\t\tdataUrl={adSpendUrl}>\n\t  \t\t</AdSpendTracker>\n\t  \t</div>\n\t);\n}\n\nexport default App;\n\n// <h1>This is how much each party has spent on Facebook ads since the election was called</h1>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\n// CSS\nimport './css/index.css';\n\n// FONTS\nimport './fonts/Shift-Bold.otf';\nimport './fonts/Shift-BoldItalic.otf';\nimport './fonts/Shift-BoldItalic.otf';\nimport './fonts/BentonSansCond-Regular.otf';\nimport './fonts/BentonSansCond-RegItalic.otf';\nimport './fonts/BentonSansCond-Bold.otf';\nimport './fonts/BentonSansCond-BoldItalic.otf';\n\n\nReactDOM.render(<App />, document.getElementById('app'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Shift-BoldItalic.5c3edbfd.otf\";"],"sourceRoot":""}